volumes:
  database_volume:
    driver: local

services:
  converter:
    build:
      context: converter
      dockerfile: Dockerfile
      target: converter-server
      platforms:
        - "linux/amd64"
    image: cr.yandex/crpek911qv82ih0gnik1/converter:latest
    container_name: converter
    restart: unless-stopped
    ports:
      - 127.0.0.1:9301:8080
    volumes:
      - ./converter/config.toml:/app/config.toml:ro
    deploy:
      resources:
        reservations:
          cpus: 0.1
          memory: 20MB
        limits:
          cpus: 0.5
          memory: 200MB

  cache:
    image: valkey/valkey:8-alpine
    container_name: cache
    restart: unless-stopped
    ports:
      - 127.0.0.1:9302:6379
    healthcheck:
      test: ["CMD", "valkey-cli", "ping"]
      interval: 10s
      timeout: 2s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        reservations:
          cpus: 0.01
          memory: 20MB
        limits:
          cpus: 0.1
          memory: 150MB

  database:
    image: surrealdb/surrealdb:v2.1
    container_name: database
    restart: unless-stopped
    ports:
      - 127.0.0.1:9303:8000
    volumes:
      - ./database_data:/data
    user: ${USERID}
    command: start --user ${DATABASE_USERNAME} --pass ${DATABASE_PASSWORD} rocksdb:/data
    healthcheck:
      test: ["CMD", "/surreal", "is-ready"]
      interval: 10s
      timeout: 2s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        reservations:
          cpus: 0.1
          memory: 20MB
        limits:
          cpus: 0.5
          memory: 200MB

  statserver:
    build:
      context: statserver
      dockerfile: Dockerfile
      target: statserver
      platforms:
        - "linux/amd64"
    image: cr.yandex/crpek911qv82ih0gnik1/statserver:latest
    container_name: statserver
    restart: unless-stopped
    ports:
      - 127.0.0.1:9304:8080
    volumes:
      - ./statserver/config.toml:/app/config.toml:ro
    depends_on:
      cache:
        condition: service_healthy
      database:
        condition: service_healthy
    deploy:
      resources:
        reservations:
          cpus: 0.1
          memory: 20MB
        limits:
          cpus: 0.5
          memory: 200MB

  frontier:
    build:
      context: frontier
      dockerfile: Dockerfile
      platforms:
        - "linux/amd64"
    image: cr.yandex/crpek911qv82ih0gnik1/frontier:latest
    container_name: frontier
    restart: unless-stopped
    volumes:
      - ./frontier/config.toml:/app/config.toml
    depends_on:
      cache:
        condition: service_healthy
      database:
        condition: service_healthy
    deploy:
      resources:
        reservations:
          cpus: 0.05
          memory: 100MB
        limits:
          cpus: 0.1
          memory: 300MB

  dotcom:
    build:
      context: dotcom
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_WEBSOCKET_URL=wss://yatesi.xyz/ws
      platforms:
        - "linux/amd64"
    image: cr.yandex/crpek911qv82ih0gnik1/dotcom:latest
    container_name: dotcom
    restart: unless-stopped
    ports:
      - 127.0.0.1:9305:8080
    depends_on:
      statserver:
        condition: service_started
    deploy:
      resources:
        reservations:
          cpus: 0.01
          memory: 50MB
        limits:
          cpus: 0.05
          memory: 100MB
